server.port=8080

spring.application.name=service-resume
spring.datasource.name=mydb
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://rm-bp14m38byen9x1gs3mo.mysql.rds.aliyuncs.com:3306/ydh_test?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&autoReconnectForPools=true&useSSL=false&allowMultiQueries=true&rewriteBatchedStatements=true&serverTimezone=GMT%2B8
spring.datasource.username=ai_call_engine
spring.datasource.password=#Daily_ai_call_engine
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.validationQuery=select 'x'
spring.datasource.initialSize=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
mybatis.type-aliases-package=com.ydh.redsheep.servicecommon.pojo
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapper-locations=mapper/*.xml
# 注册到集群，就把多个Eurekaserver地址使用逗号连接起来即可；注册到单实例（非集群模式），那就写一个就ok
eureka.client.service-url.defaultZone=http://ydh.com:8761/eureka,http://ydh2.com:8762/eureka
#服务实例中显示ip，而不是显示主机名（兼容老的eureka版本）
eureka.instance.ip-address=true
# 实例名称： 192.168.1.103:service-resume:8080，我们可以自定义它，这里注释
#eureka.instance.instance-id=${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
# 自定义Eureka元数据
eureka.instance.metadata-map.cluster=c1
eureka.instance.metadata-map.region=r1
# 服务提供者租约续约间隔时间，默认30秒，一般不需要修改
#instance.lease-renewal-interval-in-seconds=30
# 服务提供者租约到期，服务时效时间，默认值90秒,服务超过90秒没有发生心跳，EurekaServer会将服务从列表移除，一般不需要修改
#instance.lease-expiration-duration-in-seconds=90
# 服务消费者每隔多久拉取一次服务列表，一般不需要修改
#client.registry-fetch-interval-seconds=30

