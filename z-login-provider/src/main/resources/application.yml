server:
  port: 8084
spring:
  application:
    name: login-provider
  cloud:
    nacos:
      discovery:
        server-addr: 172.16.131.6:8848 # ,172.16.131.6:8849,172.16.131.6:8850
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080 # sentinel dashboard/console 地址
        port: 8719   # sentinel会在该端口启动http server，那么这样的话，控制台定义的一些限流等规则才能发送传递过来，
        # 如果8719端口被占用，那么会依次+1
  main:
    allow-bean-definition-overriding: true # 使用dubbo的bean来覆盖
logging:
  file:
    path: logs/${spring.application.name}/
  level:
    org.springframework.web.servlet.DispatcherServlet: debug
    org.springframework.cloud.sleuth: debug
dubbo:
  scan:
    # dubbo 服务扫描基准包
    base-packages: com.ydh.redsheep.zloginprovider.impl
  protocol:
    # dubbo 协议
    name: dubbo
    # dubbo 协议端口（ -1 表示自增端口，从 20880 开始）
    port: -1
    host: 127.0.0.1
  registry:
    # 挂载到 Spring Cloud 的注册中心
    address: spring-cloud://localhost
