server.port=8092

spring.application.name=service-autodeliver3

logging.config=classpath:logback-spring.xml

# 注册到集群，就把多个Eurekaserver地址使用逗号连接起来即可；注册到单实例（非集群模式），那就写一个就ok
eureka.client.service-url.defaultZone=http://ydh.com:8761/eureka,http://ydh2.com:8762/eureka
#服务实例中显示ip，而不是显示主机名（兼容老的eureka版本）
eureka.instance.ip-address=true
# 实例名称： 192.168.1.103:service-resume:8080，我们可以自定义它，这里注释
#eureka.instance.instance-id=${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
#负载策略调整
#针对的被调用方微服务名称,不加就是全局生效service-resume:
#service-resume.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RoundRobinRule
# ribbon超时时间
service-resume.ribbon.ConnectTimeout=2000
# 请求处理超时时间
service-resume.ribbon.ReadTimeout=15000
# 对所有操作都进行重试
service-resume.ribbon.OkToRetryOnAllOperations=true
# 对当前选中实例重试次数，不包括第一次调用
service-resume.ribbon.MaxAutoRetries=0
# 切换实例的重试次数
service-resume.ribbon.MaxAutoRetriesNextServer=0
# 配置熔断策略
## 强制打开熔断器，如果该属性设置为true，强制断路器进入打开状态，将会拒绝所有的请求。 默认false关闭的
#hystrix.command.default.circuitBreaker.forceOpen=false
## 触发熔断错误比例阈值，默认值50%
#hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
## 熔断后休眠时⻓，默认值5秒
#hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=3000
## 熔断触发最小请求次数，默认值是20
#hystrix.command.default.circuitBreaker.requestVolumeThreshold=2
## 熔断超时设置，默认为1秒
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=2000
# springboot中暴露健康检查等断点接口 http://localhost:8090/actuator/health
management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=
# 暴露健康接口的细节
management.endpoint.health.show-details=always

# 开启Feign的熔断功能
feign.hystrix.enabled=true
# 开启请求压缩
feign.compression.request.enabled=true
# 设置压缩的数据类型，此处也是默认值
feign.compression.request.mime-types=text/html,application/xml,application/json
# 设置触发压缩的大小下限，此处也是默认值
feign.compression.request.min-request-size=2048
# 开启响应压缩
feign.compression.response.enabled=true
